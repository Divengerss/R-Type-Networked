# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Compilation CMake multi-platform

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cmake_version: [3.21.2]

    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Initialize and update vcpkg submodule
      run: git submodule update --init --recursive
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'

    - name: Install CMake (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get -y update
        sudo apt-get -y install cmake
        cmake --version

    - name: Install CMake (macOS)
      if: matrix.os == 'macOS-latest'
      run: brew install cmake

    - name: Install CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install cmake --version ${{ matrix.cmake_version }} --install-arguments 'ADD_CMAKE_TO_PATH=System'

    - name: Install Autotools (Ubuntu)
      run: |
        sudo apt-get -y install autoconf automake libtool pkg-config
      if: matrix.os == 'ubuntu-latest'

    - name: Install Autotools (macOS)
      run: |
        brew install autoconf automake libtool pkg-config
      if: matrix.os == 'macOS-latest'

    - name: Install system X libraries and OpenGL (Ubuntu)
      run: |
        sudo apt-get -y install libudev-dev libx11-dev libxrandr-dev libxcursor-dev libgl1-mesa-dev
      if: matrix.os == 'ubuntu-latest'

    - name: Install Asio and SFML using vcpkg (Ubuntu & macOS)
      run: |
        cd vcpkg
        ./bootstrap-vcpkg.sh
        ./vcpkg integrate install
        ./vcpkg install asio sfml
        cd ..
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'

    - name: Install Asio and SFML using vcpkg (Windows)
      run: |
        cd vcpkg
        bootstrap-vcpkg.bat
        vcpkg integrate install
        vcpkg install asio sfml
        cd ..
      if: matrix.os == 'windows-latest'

    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake ..
        cmake --build .
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest' || matrix.os == 'windows-latest'
